"""
Unit Tests for mms_part_getspec bulk velocity subtraction.
"""
import pyspedas
from pytplot import data_exists, tplot_names, tplot, get_data, tplot_copy, del_data, store_data
import numpy as np
import unittest
from pyspedas import tplot_restore
from numpy.testing import assert_allclose
from pyspedas import download
from pyspedas import mms_part_getspec
global_display=False


class TestGetspecBulkv(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        #  Test tolerance
        cls.tol = 1e-10

        # Download tplot files
        # Test data was generated by projects/mms/common/validation/mms_getspec_bulkv_subtract_python_validation.pro
        remote_server = 'https://github.com/spedas/test_data/raw/refs/heads/main/'
        remote_name = 'particle_tests/mms_getspec_bulkv_validate.tplot'
        datafile = download(remote_file=remote_name,
                            remote_path=remote_server,
                            local_path='testdata',
                            no_download=False)
        if not datafile:
            # Skip tests
            raise unittest.SkipTest("Cannot download data validation file")

        # Load validation variables from the test file
        filename = datafile[0]
        tplot_restore(filename)

        cls.nobulk_subtract = get_data('mms1_dis_dist_brst_energy_no_bulk_subtract')
        cls.bulk_subtract = get_data('mms1_dis_dist_brst_energy_bulk_subtract')
        tplot_copy('mms1_dis_dist_brst_energy_no_bulk_subtract','spec_nobulk_subtract')
        tplot_copy('mms1_dis_dist_brst_energy_bulk_subtract','spec_bulk_subtract')
        del_data('mms1*')


    def test_getspec_nobulkv_subtract(self):
        """Test of getspec without bulk velocity subtraction"""

        mms_part_getspec(instrument='fpi',species='i', data_rate='brst',trange=['2015-11-19/08:34:41', '2015-11-19/08:35:53'],
                        output=['energy'], units='eflux', subtract_bulk=False, center_measurement=True, suffix='_no_bulk_subtract')
        tplot(['mms1_dis_dist_brst_energy_no_bulk_subtract','spec_nobulk_subtract'],display=global_display,save_png='mms_getspec_nobulk_subtract.png')
        pydat=get_data('mms1_dis_dist_brst_energy_no_bulk_subtract')
        # Test Y values (energy bins)
        assert_allclose(self.nobulk_subtract.v, pydat.v, rtol=1.0e-05)
        # Test Z values
        assert_allclose(self.nobulk_subtract.y, pydat.y, rtol=1.0e-05)

    def test_getspec_bulkv_subtract(self):
        """Test of getspec with bulk velocity subtraction"""

        mms_part_getspec(instrument='fpi',species='i', data_rate='brst',trange=['2015-11-19/08:34:41', '2015-11-19/08:35:53'],
                        output=['energy'], units='eflux', subtract_bulk=True, center_measurement=True, suffix='_bulk_subtract')
        tplot(['mms1_dis_dist_brst_energy_bulk_subtract','spec_bulk_subtract'],display=global_display,save_png='mms_getspec_bulk_subtract.png')
        pydat=get_data('mms1_dis_dist_brst_energy_bulk_subtract')
        # Test Y values (energy bins)
        assert_allclose(self.nobulk_subtract.v, pydat.v, rtol=1.0e-05)
        # Test Z values
        assert_allclose(self.bulk_subtract.y, pydat.y, rtol=1.0e-05)


if __name__ == '__main__':
    unittest.main()

